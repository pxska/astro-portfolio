---
import "@styles/globals.css";
import { sortPosts } from "@utils/utils";
import Layout from "@layouts/Layout.astro";
import { CornerUpLeft } from "lucide-astro";

const { frontmatter } = Astro.props;

const posts = sortPosts(
  await Astro.glob("../pages/craft/*.mdx")
);

const currPostIdx = posts.findIndex(
  (post) => post.frontmatter.title === frontmatter.title
);
const prevProject = posts[currPostIdx - 1];
const nextProject = posts[currPostIdx + 1];

const prevTitle = prevProject?.frontmatter?.title;
const nextTitle = nextProject?.frontmatter?.title;
---

<Layout title={frontmatter.title}>
  <div class="mx-auto max-w-xl">
    <div class="relative my-8">
      <a
        class="mb-8 flex items-center gap-2 text-sm leading-6 text-neutral-500 transition-colors hover:text-theme-orange lg:absolute lg:-left-32"
        href="/">
        <CornerUpLeft class="h-3 w-3" />
         Back
      </a>

      <h1 class="font-semibold">
        {frontmatter.title}
      </h1>

      <div class="mb-4 text-neutral-500">
        {frontmatter.description}
      </div>

      <img
        class="aspect-video max-w-full bg-center object-cover transition"
        src={frontmatter.cover}
        alt={frontmatter.cover_alt}
      />
    </div>

    <slot />

    <hr class="my-8" />

    <section
      class:list={[
        "flex items-center gap-8",
        { "justify-end": !prevProject && nextProject },
        { "justify-between": prevProject && nextProject },
      ]}>
      {
        prevProject && (
          <a
            class="transition-colors hover:text-theme-orange"
            href={prevProject?.url}>
            ← Previous project ({prevTitle})
          </a>
        )
      }
      {
        nextProject && (
          <a
            class="transition-colors hover:text-theme-orange"
            href={nextProject?.url}>
            Next project ({nextTitle}) →
          </a>
        )
      }
    </section>
  </div>
</Layout>
